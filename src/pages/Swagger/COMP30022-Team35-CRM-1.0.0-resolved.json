{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/COMP30022-Team35/CRM/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "http://localhost:8080",
      "description": "local server"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "manage",
      "description": "Manage organization"
    },
    {
      "name": "contact",
      "description": "Customer Contacts"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by token",
        "operationId": "getUserByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserLogin"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user/resetPassword": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "ResetPasswordUser",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "manage"
        ],
        "summary": "Check out all organization this user belongs to",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organizations"
                }
              }
            }
          },
          "400": {
            "description": "bad request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "manage"
        ],
        "summary": "Get information of an organization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "description": "The organization id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrives the organization detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "manage"
        ],
        "summary": "Create an organization",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/organization_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "manage"
        ],
        "summary": "Delete an organization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "description": "The organization id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/organization/transfer": {
      "get": {
        "tags": [
          "manage"
        ],
        "summary": "Transfer the ownership of the organization, returning an array of users in the organizaton\n",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "description": "The organization id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserArray"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "manage"
        ],
        "summary": "Transfer the ownership of the organization to a User\n",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "description": "The organization id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "new_owner",
            "in": "query",
            "description": "The user_id of the new owner",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/organization/departments": {
      "get": {
        "tags": [
          "manage"
        ],
        "summary": "Get all departments information within the organization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "description": "The organization id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrives departments detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Departments"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/organization/department": {
      "post": {
        "tags": [
          "manage"
        ],
        "summary": "Create a new department in an organization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "description": "The organization id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/organization_department_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/department": {
      "get": {
        "tags": [
          "manage"
        ],
        "summary": "Get information of a department",
        "parameters": [
          {
            "name": "department_id",
            "in": "query",
            "description": "The department id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrives the department detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "manage"
        ],
        "summary": "Delete a department",
        "parameters": [
          {
            "name": "department_id",
            "in": "query",
            "description": "The department id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/permission": {
      "post": {
        "tags": [
          "manage"
        ],
        "summary": "Give a user in a department a permission",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/permission_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "manage"
        ],
        "summary": "Delete a user from accessing a department",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "description": "The id of the department",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contact": {
      "get": {
        "tags": [
          "contact"
        ],
        "summary": "Get a list of contacts, which belongs to the department",
        "description": "This is available for users with authority level 1 and above",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "description": "The organization to query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "department_id",
            "in": "query",
            "description": "The department to query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Contact not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "contact"
        ],
        "summary": "Update a contact's information",
        "description": "This is available for users with authority level 2 and above",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful"
          },
          "400": {
            "description": "Update failed"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "contact"
        ],
        "summary": "Add a contact to department",
        "description": "This is available for users with authority level 2 and above",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Insert succeeded"
          },
          "400": {
            "description": "Insert failed"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "contact"
        ],
        "summary": "Delete one contact",
        "description": "This is available for users with authority level 3 and above",
        "parameters": [
          {
            "name": "customerID",
            "in": "query",
            "description": "The customer to be deleted",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete succeeded"
          },
          "400": {
            "description": "Delete failed"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contact/detail": {
      "get": {
        "tags": [
          "contact"
        ],
        "summary": "Display one contact's details",
        "parameters": [
          {
            "name": "contactID",
            "in": "query",
            "description": "The contact's id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Contact not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contact/search": {
      "get": {
        "tags": [
          "contact"
        ],
        "summary": "Search the contact list on the given parameter",
        "description": "This is available for users with authority level 1 and above",
        "parameters": [
          {
            "name": "fisrtName",
            "in": "query",
            "description": "Search on the customer's first name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Search on the customer's last name",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Search on the customer's gender",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "age",
            "in": "query",
            "description": "Search on the customer's age",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "organisation",
            "in": "query",
            "description": "Search on the customer's organisation",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Contact not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UserLogin": {
        "type": "array",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "remember-me": {
            "type": "boolean"
          }
        },
        "items": {
          "$ref": "#/components/schemas/UserLogin"
        }
      },
      "UserArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "Organizations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Organization"
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "organization_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "owner_id": {
            "type": "integer"
          }
        }
      },
      "Departments": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Department"
        }
      },
      "Department": {
        "type": "object",
        "properties": {
          "department_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "organization_id": {
            "type": "integer"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "department_id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          },
          "customer_type": {
            "type": "string"
          }
        }
      },
      "Contacts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Contact"
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          },
          "organization": {
            "type": "string"
          }
        }
      },
      "organization_body": {
        "required": [
          "organization_name"
        ],
        "type": "object",
        "properties": {
          "organization_name": {
            "type": "string",
            "description": "The name of the organization"
          }
        }
      },
      "organization_department_body": {
        "required": [
          "department_name"
        ],
        "type": "object",
        "properties": {
          "department_name": {
            "type": "string",
            "description": "The name of the department"
          }
        }
      },
      "permission_body": {
        "required": [
          "department_id",
          "permission_level",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "permission_level": {
            "type": "integer",
            "description": "The permission level to set to"
          },
          "department_id": {
            "type": "integer",
            "description": "The id of the department"
          }
        }
      }
    },
    "requestBodies": {
      "UserLogin": {
        "description": "request body for login",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserLogin"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/UserLogin"
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Bearer",
        "in": "header"
      }
    }
  }
}